@using Casting.Domain.enums
@model Casting.Web.Mvc.Controllers.ViewModels.CandidatoViewModel

@{
    ViewBag.Title = "DadosPessoais";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="maincontent">

    <div class="left">
		
        <div class="etapas">
            <ul class="meus_dados">
                <li class="etapa1 on"></li>
                <li class="etapa2"></li>
                <li class="etapa3"></li>
                <li class="etapa4"></li>
                <li class="etapa5"></li>
            </ul>
            <div class="clear"></div>
        </div>   
            
        <div class="clear"></div>
		
        @using (Html.BeginForm("GravaDadosPessoais", "Cadastro", null, FormMethod.Post, new { @class = "formPost" }))
        {
            <div class="form_default">
                <fieldset>
                    @Html.HiddenFor(x => x.Id)
                    <legend>Dados pessoais</legend>    
			        
                    <p>
                        <label>Nome Completo <span class="obs">(Sem abreviações)</span>: <em>*</em> </label>
                        @Html.TextBoxFor(x => x.Nome, new { @class = "por_cent", @id = "nomeCompleto" })
                        
                    </p>
					
                    <p>
                        <label>Data de nascimento:</label>
                        @Html.TextBoxFor(x => x.DataNascimento, new { @class = "pf campo_data date", @id = "dataNascimento" })
                    </p>
					
                    <p>
                        <label>Nome do Pai <span class="obs">(Sem abreviações)</span>: <em>*</em> </label>
                        @Html.TextBoxFor(x => x.NomeDoPai, new { @class = "por_cent" })
                    </p>
					
                    <p>
                        <label>Nome da Mãe <span class="obs">(Sem abreviações)</span>: <em>*</em> </label>
                        @Html.TextBoxFor(x => x.NomeDaMae, new { @class = "por_cent" })
                    </p>
					            <p>
                        <span class="fl">
                            <label>CEP <span id="carregandoCEP" style="display: none; color: #DC0C0C"> - Carregando endereço...</span></label>
                            @Html.TextBoxFor(x => x.CEP, new { @class = "sf campo_cep", onkeyup = "CompletarEndereco(this.value)" })
                            <input type="hidden" id="CepAtual"/>
                        </span>
                        <span class="fl"  >
                            <label>Região <em>*</em> </label>
                            @*<input type="text" name="name"  class="sf"/>*@
                            <select name="Regiao">
                                @if (@Model.Regiao == Regiao.Norte)
                                {
                                    <option selected="selected" value="@Regiao.Norte">@Regiao.Norte.ToString()</option>    
                                }else
                                {
                                    <option value="@Regiao.Norte">@Regiao.Norte.ToString()</option>    
                                }
                                @if (@Model.Regiao == Regiao.Sul)
                                {
                                    <option selected="selected" value="@Regiao.Sul">@Regiao.Sul.ToString()</option> 
                                }else
                                {
                                    <option value="@Regiao.Sul" >@Regiao.Sul.ToString()</option>
                                }
                                @if (@Model.Regiao == Regiao.Leste)
                                {
                                    <option selected="selected" value="@Regiao.Leste">@Regiao.Leste.ToString()</option>
                                }
                                else
                                {
                                    <option value="@Regiao.Leste">@Regiao.Leste.ToString()</option>
                                }
                                @if (@Model.Regiao == Regiao.Oeste)
                                {
                                    <option selected="selected" value="@Regiao.Oeste">@Regiao.Oeste.ToString()</option>
                                }
                                else
                                {
                                    <option value="@Regiao.Oeste">@Regiao.Oeste.ToString()</option>
                                }
                                @if (@Model.Regiao == Regiao.Centro)
                                {
                                    <option selected="selected" value="@Regiao.Centro">@Regiao.Centro.ToString()</option>
                                }
                                else
                                {
                                    <option value="@Regiao.Centro">@Regiao.Centro.ToString()</option>
                                }
                                @if (@Model.Regiao == Regiao.ABCD)
                                {
                                    <option selected="selected" value="@Regiao.ABCD">@Regiao.ABCD.ToString()</option>
                                }
                                else
                                {
                                    <option value="@Regiao.ABCD">@Regiao.ABCD.ToString()</option>
                                }
                            </select>
                        </span>
						
                        <div class="clear"></div>
                    </p>
                    <p>
                        <span class="fl">
                            <label>Endereço <em>*</em> </label>
                            @Html.TextBoxFor(x => x.Endereco, new { @class = "mf" })
                        </span>
                        <span class="fl">
                            <label>Nº <em>*</em> </label>
                            @Html.TextBoxFor(x => x.Numero, new { @class = "ppf", onkeypress = "return SomenteNumero(event)", maxlength = 5 })
                        </span>
                        <span class="fl" style="margin-left:24px;">
                            <label>Complemento </label>
                            @Html.TextBoxFor(x => x.Complemento, new { @class = "pf" })
                        </span>
                        <div class="clear"></div>
                    </p>
					
                    <p>
                        <span class="fl">
                            <label>Bairro <em>*</em> </label>
                            @Html.TextBoxFor(x => x.Bairro, new { @class = "sf" })
                        </span>
                        <span class="fl"  >
                            <label>Cidade<em>*</em> </label>
                            @Html.TextBoxFor(x => x.Cidade, new { @class = "sf" })
                        </span>
                        <span class="fl"  style="margin-left:-11px;" >
                            <label>UF<em>*</em> </label>
                            @Html.TextBoxFor(x => x.Estado, new { @class = "pppf", maxlength = 2 })
                        </span>
						
                        <div class="clear"></div>
                    </p>
					
        
					
                    <p>
                        <span class="fl">
                            <label>Telefone Residencial: </label>
                            @Html.TextBoxFor(x => x.TelefoneResidencial, new { @class = "sf campo_telefone" })
                        </span>
                        <span class="fl"  >
                            <label>Telefone Recado:</label>
                            @Html.TextBoxFor(x => x.TelefoneRecado, new { @class = "sf campo_telefone" })
                        </span>
						
                        <div class="clear"></div>
                    </p>
					
                    <p>
                        <span class="fl">
                            <label>Telefone Celular: <em>*</em></label>
                            @Html.TextBoxFor(x => x.TelefoneCelular, new { @class = "sf campo_telefone" })
                        </span>
                        <span class="fl"  >
                            <label>Telefone Comercial:</label>
                            @Html.TextBoxFor(x => x.TelefoneComercial, new { @class = "sf campo_telefone" })
                        </span>
						
                        <div class="clear"></div>
                    </p>
					
                    <p>
                        <label for="campanha">E-mail:</label>
                        @Html.TextBoxFor(x => x.Email, new { @class = "mf" })
                    </p>
					
                    <!-- BOTÕES -->
                    <p>
						
                        <a href="#" id="submitForm" class="iconlink4 fl" style="margin-left:598px; margin-top:10px;"><img src="@Url.Content("~/Content/images/cafe/icons/small/white/right.png")" class="mgright5" alt=""> <span>Próxima Etapa</span></a>
                    </p>
                    <!-- BOTÕES - END -->
                    
                    <div class="clear"></div>

                </fieldset>
            </div><!--form-->      
        
        }          		       	
		
        <div class="clear"></div>			
        <br />
					
    </div><!-- left -->       
	
    <br clear="all" />
    
</div>
<script type="text/javascript">
    jQuery(document).ready(function () {

        jQuery('#submitForm').click(function () {
            if (jQuery('#nomeCompleto').val() == "" || jQuery('#NomeDoPai').val() == "" || jQuery('#NomeDaMae').val() == "" ||
                jQuery('#Endereco').val() == "" || jQuery('#Numero').val() == "" || jQuery('#Bairro').val() == "" ||
                    jQuery('#Cidade').val() == "" || jQuery('#Estado').val() == "" || jQuery('#TelefoneCelular').val() == "" || jQuery('#Regiao').val() == ""
                ) {
                alert("Por Favor, preencha todos os campos obrigatórios!");
            } else {
                if (verificaData(jQuery('#dataNascimento').val()) || jQuery('#dataNascimento').val() == null || jQuery('#dataNascimento').val() == "") {
                    jQuery('.formPost').submit();
                } else {
                    alert("Por Favor, insira uma data válida!");
                }
            }
        });

        function verificaData(cData) {
            var data = cData;
            var tam = data.length;
            if (tam != 10) {
                return false;
            }
            var dia = data.substr(0, 2);
            var mes = data.substr(3, 2);
            var ano = data.substr(6, 4);
            if (ano < 1900) {
                return false;
            }
            if (ano > 2100) {
                return false;
            }

            switch (mes) {
                case '01':
                    if (dia <= 31)
                        return (true);
                    break;
                case '02':
                    if (dia <= 29)
                        return (true);
                    break;
                case '03':
                    if (dia <= 31)
                        return (true);
                    break;
                case '04':
                    if (dia <= 30)
                        return (true);
                    break;
                case '05':
                    if (dia <= 31)
                        return (true);
                    break;
                case '06':
                    if (dia <= 30)
                        return (true);
                    break;
                case '07':
                    if (dia <= 31)
                        return (true);
                    break;
                case '08':
                    if (dia <= 31)
                        return (true);
                    break;
                case '09':
                    if (dia <= 30)
                        return (true);
                    break;
                case '10':
                    if (dia <= 31)
                        return (true);
                    break;
                case '11':
                    if (dia <= 30)
                        return (true);
                    break;
                case '12':
                    if (dia <= 31)
                        return (true);
                    break;
            }
            {
                return false;
            }
            return true;
        }
    });

    function CompletarEndereco(cep) {
        
        var novocep = cep.replace(/-/g, "").replace(/_/g, ""); ;

        if (novocep.length < 8 || novocep == jQuery("#CepAtual").val())
            return false;
            
        jQuery('#CEP').attr("disabled", true);
        jQuery("#carregandoCEP").show();
        
        jQuery("#CepAtual").val(novocep);
        
        var url = 'http://location.hlg1.tradeforce.com.br/cep/' + novocep + '?callback=?';

        jQuery.ajax({
            type: 'GET',
            url: url,
            async: false,
            contentType: "application/json",
            dataType: 'jsonp',
            success: function (data) {
                PreencherCamposDoEndereco(data);
                jQuery("#carregandoCEP").hide();
                jQuery('#CEP').removeAttr("disabled");
            },
            error: function (e) {
                ZerarCamposDoEndereco();
                jQuery("#carregandoCEP").hide();
                jQuery('#CEP').removeAttr("disabled");
            }
        });
    }

    function PreencherCamposDoEndereco(datasource) {
        jQuery("#Endereco").val(datasource.TipoDeLogradouro + " " + datasource.Logradouro);
        jQuery("#Cidade").val(datasource.Cidade);
        jQuery("#Estado").val(datasource.Estado);
        jQuery("#Bairro").val(datasource.Bairro);
    }

    function ZerarCamposDoEndereco() {
        jQuery("#Endereco").val("");
        jQuery("#Cidade").val("");
        jQuery("#Estado").val("");
        jQuery("#Bairro").val("");
    }
</script>